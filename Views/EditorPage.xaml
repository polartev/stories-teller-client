<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:Story_Teller.ViewModels"
             xmlns:models="clr-namespace:Story_Teller.Models"
             xmlns:local="clr-namespace:Story_Teller"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:styles="clr-namespace:Story_Teller.Resources.Styles"
             x:Class="Story_Teller.Views.EditorPage"
             x:DataType="vm:EditorViewModel">

    <!-- All connected Resources must have xaml.cs class -->
    <ContentPage.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <styles:ButtonStyles />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ContentPage.Resources>
    
    <!-- Main Grid for ContentPage -->
    <Grid x:Name="main">
        <VisualStateManager.VisualStateGroups>
            <!-- VisualStateGroup for Width of ContentPage -->
            <VisualStateGroup x:Name="MainWidthStates">
                <VisualState x:Name="LargeWidthMain">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Property="ColumnDefinitions" Value="*,3*,*" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MediumWidthMain">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Property="ColumnDefinitions" Value="*,4*,*" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SmallWidthMain">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="400" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Property="ColumnDefinitions" Value="*,8*,*" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <!-- VisualStateGroup for Height of ContentPage -->
            <VisualStateGroup x:Name="MainHeightStates">
                <VisualState x:Name="LargeHeightMain">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Property="RowDefinitions" Value="3*,2*,*" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MediumHeightMain">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="500" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Property="RowDefinitions" Value="4*,2*,120" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SmallHeightMain">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="400" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Property="RowDefinitions" Value="5*,2*,100" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <ScrollView 
            Grid.Column="0" 
            Grid.ColumnSpan="3" 
            Grid.Row="0" 
            Grid.RowSpan="2" 
            VerticalOptions="Start">
            <Grid x:Name="story">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="InnerGridWidthStates">
                        <VisualState x:Name="LargeWidthInnerGrid">
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="1200" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Property="ColumnDefinitions" Value="*,3*,*" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="MediumWidthInnerGrid">
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="800" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Property="ColumnDefinitions" Value="*,4*,*" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="SmallWidthInnerGrid">
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="400" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Property="ColumnDefinitions" Value="*,8*,*" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Border
                    Grid.Column="1" Padding="12"
                    Margin="10,10,10,120"
                    StrokeShape="RoundRectangle 10"
                    BackgroundColor="WhiteSmoke">
                    <Border.Triggers>
                        <DataTrigger TargetType="Border"
                                 Binding="{Binding Story.Content}"
                                 Value="">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                        <DataTrigger TargetType="Border"
                                 Binding="{Binding Story.Content, Converter={StaticResource NotNullToBoolConverter}}"
                                 Value="False">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </Border.Triggers>
                    
                    <Grid x:Name="TextContainer">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="44"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Label 
                            x:Name="ContentLabel"
                            TextColor="#282626"
                            HorizontalOptions="FillAndExpand"
                            VerticalOptions="FillAndExpand"
                            HorizontalTextAlignment="Justify"
                            Text="{Binding Story.Content}">
                            <Label.Triggers>
                                <DataTrigger 
                                    TargetType="Label"
                                    Binding="{Binding IsTextContainer}"
                                    Value="false">
                                    <Setter Property="IsVisible" Value="false" />
                                </DataTrigger>
                                <DataTrigger
                                    TargetType="Label"
                                    Binding="{Binding IsEditing}"
                                    Value="true">
                                    <Setter Property="IsVisible" Value="false" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>

                        <Editor
                            Margin="0"
                            HorizontalOptions="FillAndExpand"
                            VerticalOptions="FillAndExpand"
                            FontSize="14"
                            TextColor="#282626"
                            AutoSize="TextChanges"
                            HorizontalTextAlignment="Justify"
                            Text="{Binding EditText, Mode=TwoWay}"
                            BackgroundColor="WhiteSmoke"
                            IsVisible="{Binding IsEditing}">
                            <Editor.Triggers>
                                <DataTrigger 
                                    TargetType="Editor"
                                    Binding="{Binding IsTextContainer}"
                                    Value="false">
                                    <Setter Property="IsVisible" Value="false" />
                                </DataTrigger>
                            </Editor.Triggers>
                        </Editor>

                        <HorizontalStackLayout 
                            Grid.Row="1" 
                            HorizontalOptions="End" 
                            IsVisible="{Binding IsTextContainer}">
                            <ImageButton
                                WidthRequest="44"
                                HeightRequest="44"
                                Source="edit.png"
                                IsVisible="{Binding IsEditing, Converter={StaticResource BoolInverterConverter}}"
                                Command="{Binding ChangeModeButtonTappedCommand}"
                                Style="{StaticResource SmallRoundedImageButton}" />

                            <ImageButton
                                WidthRequest="44"
                                HeightRequest="44"
                                Source="yes.png"
                                IsVisible="{Binding IsEditing}"
                                Command="{Binding AcceptButtonTappedCommand}"
                                Style="{StaticResource SmallRoundedImageButton}" />

                            <ImageButton
                                Padding="10"
                                WidthRequest="44"
                                HeightRequest="44"
                                Source="cross.png"
                                IsVisible="{Binding IsEditing}"
                                Command="{Binding ChangeModeButtonTappedCommand}"
                                Style="{StaticResource SmallRoundedImageButton}" />
                        </HorizontalStackLayout>

                        <FlexLayout
                            Grid.RowSpan="2"
                            Direction="Row"
                            Wrap="Wrap"
                            JustifyContent="SpaceEvenly"
                            BindableLayout.ItemsSource="{Binding ImageSources}"
                            IsVisible="{Binding IsTextContainer, Converter={StaticResource BoolInverterConverter}}">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate x:DataType="models:ImageItem">
                                    <ImageButton
                                        Margin="5"
                                        Aspect="Fill"
                                        WidthRequest="{OnPlatform Android=120, WinUI=150}"
                                        HeightRequest="{OnPlatform Android=120, WinUI=150}"
                                        Source="{Binding Source}" 
                                        Command="{Binding Source={RelativeSource AncestorType={x:Type vm:EditorViewModel}}, Path=DeleteImageButtonTappedCommand}"
                                        CommandParameter="{Binding .}" />
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </FlexLayout>
                    </Grid>
                </Border>
            </Grid>
        </ScrollView>

        <ImageButton 
            Grid.Column="0"
            Grid.Row="0"
            Grid.RowSpan="2"
            WidthRequest="{OnPlatform Android=25, WinUI=50}"
            HeightRequest="100"
            VerticalOptions="Center"
            HorizontalOptions="End"
            Source="arrow_left.png"
            Style="{StaticResource RoundedImageButton}"
            Command="{Binding ArrowButtonTappedCommand}">
            <ImageButton.Triggers>
                <DataTrigger 
                    TargetType="ImageButton"
                    Binding="{Binding IsTextContainer}"
                    Value="true">
                    <Setter Property="IsVisible" Value="false" />
                </DataTrigger>
                <DataTrigger 
                    TargetType="ImageButton"
                    Binding="{Binding IsTextContainer}"
                    Value="false">
                    <Setter Property="IsVisible" Value="true" />
                </DataTrigger>
                <DataTrigger 
                    TargetType="ImageButton"
                    Binding="{Binding Story.Content}"
                    Value="">
                    <Setter Property="IsVisible" Value="False" />
                </DataTrigger>
            </ImageButton.Triggers>
        </ImageButton>

        <ImageButton 
            Grid.Column="2"
            Grid.Row="0"
            Grid.RowSpan="2"
            WidthRequest="{OnPlatform Android=25, WinUI=50}"
            HeightRequest="100"
            VerticalOptions="Center"
            HorizontalOptions="Start"
            Source="arrow_right.png"
            Style="{StaticResource RoundedImageButton}"
            Command="{Binding ArrowButtonTappedCommand}">
            <ImageButton.Triggers>
                <DataTrigger 
                    TargetType="ImageButton"
                    Binding="{Binding IsTextContainer}"
                    Value="true">
                    <Setter Property="IsVisible" Value="true" />
                </DataTrigger>
                <DataTrigger 
                    TargetType="ImageButton"
                    Binding="{Binding IsTextContainer}"
                    Value="false">
                    <Setter Property="IsVisible" Value="false" />
                </DataTrigger>
                <DataTrigger 
                    TargetType="ImageButton"
                    Binding="{Binding Story.Content}"
                    Value="">
                    <Setter Property="IsVisible" Value="False" />
                </DataTrigger>
            </ImageButton.Triggers>
        </ImageButton>

        <Border Grid.Column="1" Grid.Row="2" Margin="5,0,5,5" StrokeShape="RoundRectangle 10" BackgroundColor="WhiteSmoke">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="44"></ColumnDefinition>
                    <ColumnDefinition Width="55"></ColumnDefinition>
                    <ColumnDefinition Width="55"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="55"></RowDefinition>
                </Grid.RowDefinitions>
                
                <ImageButton
                    Grid.Column="1"
                    Grid.Row="1"
                    Padding="12"
                    CornerRadius="12"
                    WidthRequest="44"
                    HeightRequest="44"
                    Source="cross.png"
                    Style="{StaticResource RoundedImageButton}"
                    Command="{Binding ImageButtonTappedCommand}">
                    <ImageButton.IsVisible>
                        <Binding Path="ImageSource" Converter="{StaticResource NotNullToBoolConverter}" />
                    </ImageButton.IsVisible>
                </ImageButton>

                <ImageButton
                    Grid.Column="2"
                    Grid.Row="1"
                    WidthRequest="44"
                    HeightRequest="44"
                    Source="image_photo.png"
                    Style="{StaticResource RoundedImageButton}"
                    Clicked="CameraMenuClicked">
                    <ImageButton.Triggers>
                        <DataTrigger 
                            TargetType="ImageButton"
                            Binding="{Binding ImageSource}"
                            Value="{x:Null}">
                            <Setter Property="IsVisible" Value="true" />
                        </DataTrigger>
                        <DataTrigger TargetType="ImageButton"
                             Binding="{Binding ImageSource, Converter={StaticResource NotNullToBoolConverter}}"
                             Value="True">
                            <Setter Property="IsVisible" Value="false" />
                        </DataTrigger>
                    </ImageButton.Triggers>
                </ImageButton>

                <Border
                    Grid.Column="2"
                    Grid.Row="1"
                    StrokeThickness="0.2"
                    StrokeShape="RoundRectangle 10"
                    WidthRequest="44"
                    HeightRequest="44"
                    BackgroundColor="White"
                    IsVisible="false">
                    <Border.Triggers>
                        <DataTrigger 
                            TargetType="Border"
                            Binding="{Binding ImageSource}"
                            Value="{x:Null}">
                            <Setter Property="IsVisible" Value="false" />
                        </DataTrigger>
                        <DataTrigger TargetType="Border"
                             Binding="{Binding ImageSource, Converter={StaticResource NotNullToBoolConverter}}"
                             Value="True">
                            <Setter Property="IsVisible" Value="true" />
                        </DataTrigger>
                    </Border.Triggers>
                    <Image Source="{Binding ImageSource}" Aspect="Fill" />
                </Border>

                <ImageButton
                    Grid.Column="3"
                    Grid.Row="1"
                    WidthRequest="55"
                    HeightRequest="55"
                    Source="book.png"
                    Style="{StaticResource CircleImageButton}"
                    Command="{Binding StoryButtonTappedCommand}" />
            </Grid>
        </Border>

        <Grid 
            IsVisible="{Binding IsLoading}"
             Grid.Column="0" Grid.ColumnSpan="3" 
             Grid.Row="0" Grid.RowSpan="3"
             InputTransparent="False">
            <BoxView BackgroundColor="#AAFFFFFF" />
            <ActivityIndicator 
                IsRunning="True"
                Color="DarkGray"
                WidthRequest="50"
                HeightRequest="50"
                HorizontalOptions="Center"
                VerticalOptions="Center" />
        </Grid>

    </Grid>

</ContentPage>